/* Generated by the Nim Compiler v2.0.2 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI33554445 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI520093710 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI33555835 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555180 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555178 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI520093702 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI33554447 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI520093700 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
NTI520093700.base = NTI33554447;
NTI520093702.base = NTI33554447;
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555178 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555178.node = NNI33555178;
NTI33555180.base = NTI33555177;
NTI33555181.base = NTI33555177;
var NNI33555177 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555180, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555181, name: "up", sons: null}]};
NTI33555177.node = NNI33555177;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555177.base = NTI33555173;
NTI33555178.base = NTI33555177;
NTI134217741.base = NTI33555178;
NTI134217743.base = NTI134217741;
var NNI33555835 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554450, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554450, name: "Field2", sons: null}]};
NTI33555835.node = NNI33555835;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555178;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555178;
NTI520093710.base = NTI33554445;
var startX_520093703 = new Float64Array([-0.75, 0.75, -0.75, 0.75]);

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}
var startY_520093704 = new Float64Array([-0.75, -0.75, 0.75, 0.75]);

function makeNimstrLit(c_33556895) {
      var result = [];
  for (var i = 0; i < c_33556895.length; ++i) {
    result[i] = c_33556895.charCodeAt(i);
  }
  return result;
  

  
}

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function mnewString(len_33557003) {
        var result = new Array(len_33557003);
    for (var i = 0; i < len_33557003; i++) {result[i] = 0;}
    return result;
  

  
}

function arrayConstr(len_33557314, value_33557315, typ_33557316) {
        var result = new Array(len_33557314);
    for (var i = 0; i < len_33557314; ++i) result[i] = nimCopy(null, value_33557315, typ_33557316);
    return result;
  

  
}

function cstrToNimstr(c_33556898) {
      var ln = c_33556898.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556898.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556898.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function raiseException(e_33556653, ename_33556654) {
    e_33556653.name = ename_33556654;
    if ((excHandler == 0)) {
    unhandledException(e_33556653);
    }
    
    e_33556653.trace = nimCopy(null, rawWriteStackTrace_33556604(), NTI33554449);
    throw e_33556653;

  
}

function addInt(a_33557050, b_33557051) {
        var result = a_33557050 + b_33557051;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557324, a_33557325, b_33557326) {
  var result_33557327 = 0;

  BeforeRet: {
    if (((a_33557325 <= i_33557324) && (i_33557324 <= b_33557326))) {
    result_33557327 = i_33557324;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557327;

}

function chckIndx(i_33557319, a_33557320, b_33557321) {
  var result_33557322 = 0;

  BeforeRet: {
    if (((a_33557320 <= i_33557319) && (i_33557319 <= b_33557321))) {
    result_33557322 = i_33557319;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557319, a_33557320, b_33557321);
    }
    
  };

  return result_33557322;

}

function mulInt(a_33557058, b_33557059) {
        var result = a_33557058 * b_33557059;
    checkOverflowInt(result);
    return result;
  

  
}
            var freqs_520093705 = new Float64Array([1.0, 1.189207115002721, 1.2599210498948732, 1.4142135623730951]);
var F = {procname: "module tsGlue", prev: framePtr, filename: "C:\\Users\\kauder\\Documents\\installer\\Github\\playground\\nim\\nim-webgl-example\\src\\tsGlue.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tsGlue", prev: framePtr, filename: "C:\\Users\\kauder\\Documents\\installer\\Github\\playground\\nim\\nim-webgl-example\\src\\tsGlue.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\Users\\kauder\\.choosenim\\toolchains\\nim-2.0.2\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\Users\\kauder\\.choosenim\\toolchains\\nim-2.0.2\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "C:\\Users\\kauder\\.choosenim\\toolchains\\nim-2.0.2\\lib\\std\\private\\bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "C:\\Users\\kauder\\.choosenim\\toolchains\\nim-2.0.2\\lib\\std\\private\\bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "C:\\Users\\kauder\\.choosenim\\toolchains\\nim-2.0.2\\lib\\system\\countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "C:\\Users\\kauder\\.choosenim\\toolchains\\nim-2.0.2\\lib\\system\\countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\Users\\kauder\\.choosenim\\toolchains\\nim-2.0.2\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\Users\\kauder\\.choosenim\\toolchains\\nim-2.0.2\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\Users\\kauder\\.choosenim\\toolchains\\nim-2.0.2\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\Users\\kauder\\.choosenim\\toolchains\\nim-2.0.2\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "C:\\Users\\kauder\\.choosenim\\toolchains\\nim-2.0.2\\lib\\pure\\math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "C:\\Users\\kauder\\.choosenim\\toolchains\\nim-2.0.2\\lib\\pure\\math.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet1[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "C:\\Users\\kauder\\.choosenim\\toolchains\\nim-2.0.2\\lib\\system.nim", line: 0};
  framePtr = F;
    F.line = 631;
    F.filename = "system.nim";
    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }  framePtr = F.prev;

  return result_33556922;

}

function add_33556373(x_33556374, x_33556374_Idx, y_33556375) {
          if (x_33556374[x_33556374_Idx] === null) { x_33556374[x_33556374_Idx] = []; }
      var off = x_33556374[x_33556374_Idx].length;
      x_33556374[x_33556374_Idx].length += y_33556375.length;
      for (var i = 0; i < y_33556375.length; ++i) {
        x_33556374[x_33556374_Idx][off+i] = y_33556375.charCodeAt(i);
      }
    

  
}

function auxWriteStackTrace_33556508(f_33556509) {
  var result_33556510 = [[]];

    var it_33556518 = f_33556509;
    var i_33556519 = 0;
    var total_33556520 = 0;
    var tempFrames_33556521 = arrayConstr(64, {Field0: null, Field1: 0, Field2: null}, NTI33555835);
    Label1: {
        Label2: while (true) {
        if (!(!((it_33556518 == null)) && (i_33556519 <= 63))) break Label2;
          tempFrames_33556521[i_33556519].Field0 = it_33556518.procname;
          tempFrames_33556521[i_33556519].Field1 = it_33556518.line;
          tempFrames_33556521[i_33556519].Field2 = it_33556518.filename;
          i_33556519 += 1;
          total_33556520 += 1;
          it_33556518 = it_33556518.prev;
        }
    };
    Label3: {
        Label4: while (true) {
        if (!!((it_33556518 == null))) break Label4;
          total_33556520 += 1;
          it_33556518 = it_33556518.prev;
        }
    };
    result_33556510[0] = nimCopy(null, [], NTI33554449);
    if (!((total_33556520 == i_33556519))) {
    result_33556510[0].push.apply(result_33556510[0], [40]);;
    result_33556510[0].push.apply(result_33556510[0], HEX24_369098760((total_33556520 - i_33556519)));;
    result_33556510[0].push.apply(result_33556510[0], [32,99,97,108,108,115,32,111,109,105,116,116,101,100,41,32,46,46,46,10]);;
    }
    
    Label5: {
      var j_33556554 = 0;
      var colontmp__520093906 = 0;
      colontmp__520093906 = (i_33556519 - 1);
      var res_520093908 = colontmp__520093906;
      Label6: {
          Label7: while (true) {
          if (!(0 <= res_520093908)) break Label7;
            j_33556554 = res_520093908;
            result_33556510[0].push.apply(result_33556510[0], cstrToNimstr(tempFrames_33556521[j_33556554].Field2));;
            if ((0 < tempFrames_33556521[j_33556554].Field1)) {
            result_33556510[0].push.apply(result_33556510[0], [40]);;
            addInt_301990129(result_33556510, 0, tempFrames_33556521[j_33556554].Field1);
            if (false) {
            result_33556510[0].push.apply(result_33556510[0], [44,32]);;
            addInt_301990129(result_33556510, 0, 0);
            }
            
            result_33556510[0].push.apply(result_33556510[0], [41]);;
            }
            
            result_33556510[0].push.apply(result_33556510[0], [32,97,116,32]);;
            add_33556373(result_33556510, 0, tempFrames_33556521[j_33556554].Field0);
            result_33556510[0].push.apply(result_33556510[0], [10]);;
            res_520093908 -= 1;
          }
      };
    };

  return result_33556510[0];

}

function rawWriteStackTrace_33556604() {
  var result_33556605 = [];

    if (!((framePtr == null))) {
    result_33556605 = nimCopy(null, ([84,114,97,99,101,98,97,99,107,32,40,109,111,115,116,32,114,101,99,101,110,116,32,99,97,108,108,32,108,97,115,116,41,10] || []).concat(auxWriteStackTrace_33556508(framePtr) || []), NTI33554449);
    }
    else {
      result_33556605 = nimCopy(null, [78,111,32,115,116,97,99,107,32,116,114,97,99,101,98,97,99,107,32,97,118,97,105,108,97,98,108,101,10], NTI33554449);
    }
    

  return result_33556605;

}

function unhandledException(e_33556649) {
    var buf_33556650 = [[]];
    if (!(((e_33556649.message).length == 0))) {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556650[0].push.apply(buf_33556650[0], e_33556649.message);;
    }
    else {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556650[0].push.apply(buf_33556650[0], [32,91]);;
    add_33556373(buf_33556650, 0, e_33556649.name);
    buf_33556650[0].push.apply(buf_33556650[0], [93,10]);;
    buf_33556650[0].push.apply(buf_33556650[0], rawWriteStackTrace_33556604());;
    var cbuf_33556651 = toJSStr(buf_33556650[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556651);
  }
  else {
    throw cbuf_33556651;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557048) {
        if (a_33557048 > 2147483647 || a_33557048 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990090(result_301990092, result_301990092_Idx, x_301990093, start_301990094, n_301990095) {
    var Temporary1;

  var F = {procname: "addChars.addChars", prev: framePtr, filename: "C:\\Users\\kauder\\.choosenim\\toolchains\\nim-2.0.2\\lib\\std\\private\\digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 43;
    F.filename = "digitsutils.nim";
    var old_301990096 = (result_301990092[result_301990092_Idx]).length;
    F.line = 44;
    if (result_301990092[result_301990092_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_301990095), 0, 2147483647), Temporary1)) { for (var i = result_301990092[result_301990092_Idx].length; i < Temporary1; ++i) result_301990092[result_301990092_Idx].push(0); }
         else {result_301990092[result_301990092_Idx].length = Temporary1; };
    Label2: {
      F.line = 46;
      var iHEX60gensym4_301990110 = 0;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_520093901 = 0;
      Label3: {
        F.line = 120;
          Label4: while (true) {
          if (!(i_520093901 < n_301990095)) break Label4;
            F.line = 49;
            F.filename = "digitsutils.nim";
            iHEX60gensym4_301990110 = i_520093901;
            F.line = 49;
            result_301990092[result_301990092_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_301990092[result_301990092_Idx]).length - 1)] = x_301990093.charCodeAt(chckIndx(addInt(start_301990094, iHEX60gensym4_301990110), 0, (x_301990093).length - 1));
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_520093901 = addInt(i_520093901, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function addChars_301990086(result_301990088, result_301990088_Idx, x_301990089) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "C:\\Users\\kauder\\.choosenim\\toolchains\\nim-2.0.2\\lib\\std\\private\\digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 55;
    F.filename = "digitsutils.nim";
    addChars_301990090(result_301990088, result_301990088_Idx, x_301990089, 0, ((x_301990089) == null ? 0 : (x_301990089).length));
  framePtr = F.prev;

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "C:\\Users\\kauder\\.choosenim\\toolchains\\nim-2.0.2\\lib\\std\\private\\digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 111;
    F.filename = "digitsutils.nim";
    addChars_301990086(result_301990112, result_301990112_Idx, ((x_301990113) + ""));
  framePtr = F.prev;

  
}

function addInt_301990129(result_301990130, result_301990130_Idx, x_301990131) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "C:\\Users\\kauder\\.choosenim\\toolchains\\nim-2.0.2\\lib\\std\\private\\digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 115;
    F.filename = "digitsutils.nim";
    addInt_301990111(result_301990130, result_301990130_Idx, BigInt(x_301990131));
  framePtr = F.prev;

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "C:\\Users\\kauder\\.choosenim\\toolchains\\nim-2.0.2\\lib\\system\\dollars.nim", line: 0};
  framePtr = F;
    F.line = 18;
    F.filename = "dollars.nim";
    addInt_301990129(result_369098762, 0, x_369098761);
  framePtr = F.prev;

  return result_369098762[0];

}

function raiseIndexError(i_33556812, a_33556813, b_33556814) {
    var Temporary1;

    if ((b_33556814 < a_33556813)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556812) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556813) || [],[32,46,46,32] || [],HEX24_369098760(b_33556814) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function makeModel_520093708() {
  var result_520093709 = new Float64Array(24);

  var F = {procname: "app.makeModel", prev: framePtr, filename: "C:\\Users\\kauder\\Documents\\installer\\Github\\playground\\nim\\nim-webgl-example\\src\\app.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 20;
    F.filename = "app.nim";
    result_520093709 = nimCopy(result_520093709, new Float64Array([modelX_520093706[0][chckIndx(0, 0, (modelX_520093706[0]).length - 1)], modelY_520093707[0][chckIndx(0, 0, (modelY_520093707[0]).length - 1)], modelX_520093706[0][chckIndx(1, 0, (modelX_520093706[0]).length - 1)], modelY_520093707[0][chckIndx(1, 0, (modelY_520093707[0]).length - 1)], modelX_520093706[0][chckIndx(0, 0, (modelX_520093706[0]).length - 1)], modelY_520093707[0][chckIndx(0, 0, (modelY_520093707[0]).length - 1)], modelX_520093706[0][chckIndx(2, 0, (modelX_520093706[0]).length - 1)], modelY_520093707[0][chckIndx(2, 0, (modelY_520093707[0]).length - 1)], modelX_520093706[0][chckIndx(0, 0, (modelX_520093706[0]).length - 1)], modelY_520093707[0][chckIndx(0, 0, (modelY_520093707[0]).length - 1)], modelX_520093706[0][chckIndx(3, 0, (modelX_520093706[0]).length - 1)], modelY_520093707[0][chckIndx(3, 0, (modelY_520093707[0]).length - 1)], modelX_520093706[0][chckIndx(1, 0, (modelX_520093706[0]).length - 1)], modelY_520093707[0][chckIndx(1, 0, (modelY_520093707[0]).length - 1)], modelX_520093706[0][chckIndx(3, 0, (modelX_520093706[0]).length - 1)], modelY_520093707[0][chckIndx(3, 0, (modelY_520093707[0]).length - 1)], modelX_520093706[0][chckIndx(2, 0, (modelX_520093706[0]).length - 1)], modelY_520093707[0][chckIndx(2, 0, (modelY_520093707[0]).length - 1)], modelX_520093706[0][chckIndx(1, 0, (modelX_520093706[0]).length - 1)], modelY_520093707[0][chckIndx(1, 0, (modelY_520093707[0]).length - 1)], modelX_520093706[0][chckIndx(2, 0, (modelX_520093706[0]).length - 1)], modelY_520093707[0][chckIndx(2, 0, (modelY_520093707[0]).length - 1)], modelX_520093706[0][chckIndx(3, 0, (modelX_520093706[0]).length - 1)], modelY_520093707[0][chckIndx(3, 0, (modelY_520093707[0]).length - 1)]]), NTI520093710);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520093709;

}

function or_520093699(a_520093700, b_520093701) {
  var result_520093702 = 0.0;

  var F = {procname: "app.or", prev: framePtr, filename: "C:\\Users\\kauder\\Documents\\installer\\Github\\playground\\nim\\nim-webgl-example\\src\\app.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 5;
    F.filename = "app.nim";
    result_520093702 = ((a_520093700 | b_520093701) >>> 0);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520093702;

}

function toFloat_33556008(i_33556009) {
  var result_33556010 = 0.0;

  var F = {procname: "system.toFloat", prev: framePtr, filename: "C:\\Users\\kauder\\.choosenim\\toolchains\\nim-2.0.2\\lib\\system.nim", line: 0};
  framePtr = F;
    F.line = 1292;
    F.filename = "system.nim";
    result_33556010 = i_33556009;
  framePtr = F.prev;

  return result_33556010;

}

function HEX2F_33556020(x_33556021, y_33556022) {
  var result_33556023 = 0.0;

  var F = {procname: "system./", prev: framePtr, filename: "C:\\Users\\kauder\\.choosenim\\toolchains\\nim-2.0.2\\lib\\system.nim", line: 0};
  framePtr = F;
    F.line = 1340;
    F.filename = "system.nim";
    result_33556023 = (toFloat_33556008(x_33556021) / toFloat_33556008(y_33556022));
  framePtr = F.prev;

  return result_33556023;

}

function HEX2BHEX3D_520093784(x_520093786, x_520093786_Idx, y_520093787) {
  var F = {procname: "+=.+=", prev: framePtr, filename: "C:\\Users\\kauder\\.choosenim\\toolchains\\nim-2.0.2\\lib\\system\\arithmetics.nim", line: 0};
  framePtr = F;
    F.line = 330;
    F.filename = "arithmetics.nim";
    x_520093786[x_520093786_Idx] = (x_520093786[x_520093786_Idx] + y_520093787);
  framePtr = F.prev;

  
}

function drawCanvas_520093759() {
  var F = {procname: "app.drawCanvas", prev: framePtr, filename: "C:\\Users\\kauder\\Documents\\installer\\Github\\playground\\nim\\nim-webgl-example\\src\\app.nim", line: 0};
  framePtr = F;
    F.line = 72;
    F.filename = "app.nim";
    var bg_520093763 = ((Math.cos(theta_520093758[0]) + 1.0) / 2.0);
    F.line = 75;
    var model_520093764 = makeModel_520093708();
    Label1: {
      F.line = 76;
      var i_520093776 = 0;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_520093892 = 0;
      Label2: {
        F.line = 120;
          Label3: while (true) {
          if (!(i_520093892 < 24)) break Label3;
            F.line = 76;
            F.filename = "app.nim";
            i_520093776 = i_520093892;
            F.line = 76;
            float32Set(packedModel_520093752[0], i_520093776, model_520093764[chckIndx(i_520093776, 0, (model_520093764).length - 1)]);
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_520093892 = addInt(i_520093892, 1);
          }
      };
    };
    F.line = 78;
    F.filename = "app.nim";
    gl.bindBuffer(gl.ARRAY_BUFFER, vertices_520093753[0]);
    F.line = 79;
    gl.bufferData(gl.ARRAY_BUFFER, packedModel_520093752[0].buffer, gl.DYNAMIC_DRAW);
    F.line = 80;
    gl.bindBuffer(gl.ARRAY_BUFFER, null);
    F.line = 83;
    gl.viewport(0.0, 0.0, canvas.width, canvas.height);
    F.line = 84;
    gl.clearColor(bg_520093763, 0.0, 0.0, 1.0);
    F.line = 85;
    gl.enable(gl.DEPTH_TEST);
    F.line = 86;
    gl.depthFunc(gl.LEQUAL);
    F.line = 87;
    gl.clear(or_520093699(gl.COLOR_BUFFER_BIT, gl.DEPTH_BUFFER_BIT));
    F.line = 90;
    gl.useProgram(program_520093756[0]);
    F.line = 91;
    gl.bindBuffer(gl.ARRAY_BUFFER, vertices_520093753[0]);
    F.line = 92;
    gl.vertexAttribPointer(positionAttrib_520093757[0], 2.0, gl.FLOAT, false, 0.0, 0.0);
    F.line = 93;
    gl.enableVertexAttribArray(positionAttrib_520093757[0]);
    F.line = 96;
    gl.drawArrays(gl.LINES, 0.0, HEX2F_33556020(24, 2));
    F.line = 100;
    HEX2BHEX3D_520093784(theta_520093758, 0, 0.006135923151542565);
    Label4: {
      F.line = 101;
      var i_520093800 = 0;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_520093895 = 0;
      Label5: {
        F.line = 120;
          Label6: while (true) {
          if (!(i_520093895 < 4)) break Label6;
            F.line = 101;
            F.filename = "app.nim";
            i_520093800 = i_520093895;
            F.line = 102;
            var at_520093801 = ((theta_520093758[0] * 8.0) - (addInt(mulInt(i_520093800, 4), 1) * 3.141592653589793));
            if ((0.0 < at_520093801)) {
            F.line = 104;
            modelX_520093706[0][chckIndx(i_520093800, 0, (modelX_520093706[0]).length - 1)] = (startX_520093703[chckIndx(i_520093800, 0, (startX_520093703).length - 1)] + (Math.sin((at_520093801 * freqs_520093705[chckIndx(i_520093800, 0, (freqs_520093705).length - 1)])) / 8.0));
            }
            
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_520093895 = addInt(i_520093895, 1);
          }
      };
    };
  framePtr = F.prev;

  
}
var F = {procname: "module app", prev: framePtr, filename: "C:\\Users\\kauder\\Documents\\installer\\Github\\playground\\nim\\nim-webgl-example\\src\\app.nim", line: 0};
framePtr = F;
F.line = 15;
F.filename = "app.nim";
var modelX_520093706 = [nimCopy(null, startX_520093703, NTI520093700)];
F.line = 16;
var modelY_520093707 = [nimCopy(null, startY_520093704, NTI520093702)];
F.line = 31;
var vertexShaderCode_520093742 = makeNimstrLit("attribute vec2 position;\x0Avoid main(void) {\x0A    gl_Position = vec4(position, 0.0, 1.0);\x0A}\x0A");
F.line = 38;
var fragmentShaderCode_520093743 = makeNimstrLit("void main(void) {\x0A    gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\x0A}\x0A");
F.line = 45;
var packedModel_520093752 = [new Float32Array(24.0)];
F.line = 46;
var vertices_520093753 = [gl.createBuffer()];
F.line = 49;
var vertexShader_520093754 = [gl.createShader(gl.VERTEX_SHADER)];
F.line = 50;
gl.shaderSource(vertexShader_520093754[0], toJSStr(vertexShaderCode_520093742));
F.line = 51;
gl.compileShader(vertexShader_520093754[0]);
F.line = 52;
checkShader(vertexShader_520093754[0]);
F.line = 55;
var fragmentShader_520093755 = [gl.createShader(gl.FRAGMENT_SHADER)];
F.line = 56;
gl.shaderSource(fragmentShader_520093755[0], toJSStr(fragmentShaderCode_520093743));
F.line = 57;
gl.compileShader(fragmentShader_520093755[0]);
F.line = 58;
checkShader(fragmentShader_520093755[0]);
F.line = 61;
var program_520093756 = [gl.createProgram()];
F.line = 62;
gl.attachShader(program_520093756[0], vertexShader_520093754[0]);
F.line = 63;
gl.attachShader(program_520093756[0], fragmentShader_520093755[0]);
F.line = 64;
gl.linkProgram(program_520093756[0]);
F.line = 65;
checkProgram(program_520093756[0]);
F.line = 67;
var positionAttrib_520093757 = [gl.getAttribLocation(program_520093756[0], "position")];
F.line = 69;
var theta_520093758 = [0.0];
if (!((gl == null))) {
F.line = 108;
drawCanvasCallback = drawCanvas_520093759;
F.line = 109;
startup();
}

framePtr = F.prev;
var F = {procname: "module app", prev: framePtr, filename: "C:\\Users\\kauder\\Documents\\installer\\Github\\playground\\nim\\nim-webgl-example\\src\\app.nim", line: 0};
framePtr = F;
framePtr = F.prev;
